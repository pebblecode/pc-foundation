<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="NodeBuilderTest" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<typeAlias alias="NodeBuilderTest" type="PebbleCode.Tests.Entities.NodeBuilderTest, PC.Tests" />
		<typeAlias alias="NodeBuilderTestList" type="PebbleCode.Tests.Entities.NodeBuilderTestList, PC.Tests" />
	</alias>
			
	<resultMaps>
		<resultMap id="NodeBuilderTestResult" class="NodeBuilderTest">
			<result property="DbId" column="id" type="int" dbType="Int"/>
			<result property="DbField1" column="field1" type="int" dbType="Int"/>
			<result property="DbField2" column="field2" type="string" dbType="varchar"/>
			<result property="DbNodeIdField" column="node_id_field" type="string" dbType="varchar"/>
		</resultMap>
	</resultMaps>

	<statements>
		
		<!-- Reusable fragment for select all columns in the table -->
		<sql id="NodeBuilderTestColumnNamesFragment">
			node_builder_test.id,
			node_builder_test.field1,
			node_builder_test.field2,
			node_builder_test.node_id_field
		</sql>
	
		<!-- Select entity by primary key -->
		<select id="SelectNodeBuilderTest" parameterClass="int" listClass="NodeBuilderTestList" resultMap="NodeBuilderTestResult">
			SELECT
				<include refid="NodeBuilderTestColumnNamesFragment"/>
			FROM
				node_builder_test
			<dynamic prepend="WHERE">
				<isParameterPresent>id = #value#</isParameterPresent>
			</dynamic>
		</select>

		<!-- Select entities by primary key -->
		<select id="SelectNodeBuilderTests" parameterClass="list" listClass="NodeBuilderTestList" resultMap="NodeBuilderTestResult">
			SELECT
				<include refid="NodeBuilderTestColumnNamesFragment"/>
			FROM
				node_builder_test
			WHERE
				id IN
				<iterate open="(" close=")" conjunction=", ">
				  #[]#
				</iterate>
		</select>


		<!-- Does entity exist? -->
		<select id="DoesNodeBuilderTestExist" parameterClass="int" resultClass="bool">
			SELECT
				1
			FROM
				node_builder_test
			WHERE
				id = #value#
		</select>

		<insert id="InsertNodeBuilderTest" parameterClass="NodeBuilderTest">
			INSERT INTO
				node_builder_test
				(
					field1,
					field2,
					node_id_field
				)
			VALUES
				(
					#DbField1#,
					#DbField2#,
					#DbNodeIdField#
				)
			<selectKey resultClass="int" type="post" property="DbId">
				SELECT @@IDENTITY as value
			</selectKey>
		</insert>
		
		<update id="UpdateNodeBuilderTest" parameterClass="NodeBuilderTest">
			UPDATE
				node_builder_test
			SET
				field1=#DbField1#,
				field2=#DbField2#,
				node_id_field=#DbNodeIdField#
			WHERE
				id=#DbId#
		</update>
	

		<delete id="DeleteNodeBuilderTest" parameterClass="int">
			DELETE FROM
				node_builder_test
			WHERE
				id = #value#
		</delete>
				

		<!-- Delete ALL -->
		<delete id="DeleteAllNodeBuilderTest">
			DELETE FROM node_builder_test 
		</delete>

	</statements>

</sqlMap>
