<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <BaseDir Condition="'$(BaseDir)' == ''">$(ProjectDir)\..</BaseDir>
	<MSBuildCommunityTasksPath>$(BaseDir)\packages\MSBuildTasks.1.4.0.45\tools</MSBuildCommunityTasksPath>
  </PropertyGroup>
  
  <Target Name="LoadAssemblyVersion" Outputs="$(AssemblyVersion)" DependsOnTargets="LoadMajorAssemblyVersion">
	<!-- 
    <SvnVersion LocalPath="$(BaseDir)" ToolPath="C:\Program Files\SlikSvn\bin">
      <Output TaskParameter="Revision" PropertyName="AssemblyVersionRevision" />
    </SvnVersion>
	-->
	
    <GitVersion Path="master" Condition="$(CommandLineVersionNumber)==''">
      <Output PropertyName="AssemblyVersionRevision" TaskParameter="CommitCount" />
    </GitVersion>
    <Message Text="Commit count: $(AssemblyVersionRevision)"/>
    <Message Text="Package Version: $(MajorAssemblyVersion).$(AssemblyVersionRevision)"/>
	
    <PropertyGroup Condition="$(CommandLineVersionNumber)==''">
      <AssemblyVersion>$(MajorAssemblyVersion).$(AssemblyVersionRevision)</AssemblyVersion>
    </PropertyGroup>
    <PropertyGroup Condition="$(CommandLineVersionNumber)!=''">
      <AssemblyVersion>$(CommandLineVersionNumber)</AssemblyVersion>
    </PropertyGroup>
  </Target>

  <Target Name="LoadMajorAssemblyVersion" Outputs="$(MajorAssemblyVersion)">
    <Version VersionFile="$(BaseDir)\version.txt">
      <Output TaskParameter="Major" PropertyName="AssemblyVersionMajor" />
      <Output TaskParameter="Minor" PropertyName="AssemblyVersionMinor" />
      <Output TaskParameter="Build" PropertyName="AssemblyVersionRevision" />
    </Version>
    <PropertyGroup>
      <MajorAssemblyVersion>$(AssemblyVersionMajor).$(AssemblyVersionMinor).$(AssemblyVersionRevision)</MajorAssemblyVersion>
    </PropertyGroup>
  </Target>
  
  
  <Target Name="GenerateAssemblyVersionInfoFileCs" BeforeTargets="CoreCompile" DependsOnTargets="LoadAssemblyVersion" Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <AssemblyInfo CodeLanguage="CS"
                  OutputFile="$(BaseDir)\AssemblyVersion.cs"
                  AssemblyVersion="$(AssemblyVersion)"
                  AssemblyFileVersion="$(AssemblyVersion)" />
    <Message Text="Linking from base directory: $(BaseDir)" />
    <ItemGroup>
      <Compile Include="$(BaseDir)\AssemblyVersion.cs">
        <Link>Properties\AssemblyVersion.cs</Link>
      </Compile>
    </ItemGroup>
  </Target>
  
  <Target Name="GenerateAssemblyVersionInfoFileFs" BeforeTargets="CoreCompile" DependsOnTargets="LoadAssemblyVersion" Condition="'$(MSBuildProjectExtension)' == '.fsproj'">
    <ItemGroup>
      <Tokens Include="AssemblyVersion">
        <ReplacementValue>$(AssemblyVersion)</ReplacementValue>
      </Tokens>
    </ItemGroup>
    <TemplateFile Template="$(BaseDir)\AssemblyVersion.fs.template" OutputFilename="$(BaseDir)\AssemblyVersion.fs" Tokens="@(Tokens)" />
    <ItemGroup>
      <Compile Include="$(BaseDir)\AssemblyVersion.fs">
        <Link>Properties\AssemblyVersion.fs</Link>
      </Compile>
    </ItemGroup>
  </Target>
  
  <UsingTask TaskName="GitVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <LocalPath ParameterType="System.String" />
      <Path ParameterType="System.String" />
      <CommitCount ParameterType="System.Int32" Output="true" />
    </ParameterGroup>
    <Task>
      <!--<Reference Include="" />-->
      <Using Namespace="System"/>
      <Using Namespace="System.Diagnostics"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          LocalPath = LocalPath ?? ".";
          Path = Path ?? "master";
          
          Log.LogMessage(MessageImportance.Low, "LocalPath is {0}", LocalPath);
          Log.LogMessage(MessageImportance.Low, "Path is {0}", Path);
          
          var psi = new ProcessStartInfo("git", "rev-list " + Path + " --count") {
			  WindowStyle = ProcessWindowStyle.Hidden,
              UseShellExecute = false, 
              ErrorDialog = false, 
              CreateNoWindow = true, 
              WorkingDirectory = LocalPath,
              RedirectStandardOutput = true,
              RedirectStandardError = true
          };

          using (var p = Process.Start(psi)) {
            p.WaitForExit();
            if (p.ExitCode != 0) {
              using (var standardError = p.StandardError) {
                Log.LogError(standardError.ReadToEnd());
              }
              return false;
            }

            using (var standardOutput = p.StandardOutput) {
              CommitCount = Int32.Parse(standardOutput.ReadToEnd());
            }
          }
]]>
      </Code>
    </Task>
  </UsingTask>  

  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

</Project>